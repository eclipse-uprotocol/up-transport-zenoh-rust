# ********************************************************************************
#  Copyright (c) 2024 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  SPDX-License-Identifier: Apache-2.0
# *******************************************************************************/

name: Pull Request

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - "examples/**"
      - "Cargo.*"
      - ".github/**"
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  RUST_TOOLCHAIN: ${{ vars.RUST_TOOLCHAIN || 'stable' }}
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with: 
        toolchain: ${{ env.RUST_TOOLCHAIN }}
    - name: Run cargo check
      run: |
        cargo check --all --tests

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt
      - name: cargo fmt
        run: |
          cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy
      - name: cargo clippy
        run: |
          cargo clippy --version
          cargo clippy --all-targets -- -W warnings -D warnings

  run-doctest:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Run doc tests
        run: |
          RUSTC_BOOTSTRAP=1 cargo test --doc -- -Z unstable-options --format json --report-time > doctestresults.json
      - name: Upload doctest results artifact
        uses: actions/upload-artifact@v4
        with:
          name: doctest-results
          path: doctestresults.json

  build-docs:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Create Documentation
        run: |
          cargo doc --no-deps

  nextest:
    uses: ./.github/workflows/nextest.yaml
